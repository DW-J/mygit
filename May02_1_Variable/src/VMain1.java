
public class VMain1 {
	public static void main(String[] args) {
		// 컴퓨터의 장치 !!
		// CPU / RAM / HDD / GPU
		
		// CPU : 연산장치(Intel : i5-xxxx, i7-xxxx, / AMD : RyzenX)
		
		// HDD(SSD) : 파일의 형태로 저장(장치) 
		//  		=> 영구 저장
		
		// RAM : 변수 형태로 저장(장치)
		// 			=> 임시 저장
		 
		// GPU : 그래픽처리요 (CPU + HDD + RAM)
		
		// 데이터를 임시보존 => RAM에 변수로 저장!
		// 데이터를 영구보존 => HDD에 파일로 저장!
		//				 => 그래서 변수가 뭔데 XX아?
		
		// syso로 글자나 숫자를 출력했을 때 -> 휘발성(1회용)이다
		// 							  => 재사용이 안됨!
		
		System.out.println("ㅋ" + "ㅎ" + "ㅁㄴㅇㄹ");
		System.out.println(3 + 3 + 2 / 10 * 2 + 23 + 78);
		// 계산을 하다가...
		// 그 결과 값이 100줄 뒤에 필요하다면...?
		
		// 이럴 때 사용하는게 변수!(Variable) : 데이터를 저장하는 공간[그릇]
		// 왜? (X) / 언제?(O)
		
		// 변수 문법 (어떻게 사용하는지)
		/*
		 * 1. 변수 선언 - RAM에 공간을 확보해서
		 * 				무언가를 담을 수 잇는 공간을 만든다!
		 * ( 자료형 변수명; )의 형태를 변수로 '선언' 했다 라고 표현
		 * ㄴ( 그릇종류 그릇이름; )

		 * 2. 변수 초기화
		 * 		변수에 값을 넣어줘야 하는데...
		 * 		( 변수명 = 값; )의 형태로 표현
		 * 		- 자료형 : 변수가 어떤 값으로 저장할지 그 형태를 지정
		 * 		- 변수명 : 말 그대로 변수의 이름
		 * 		String s; : 문자열(String)을 담을 그릇 s
		 * 		int i; : 정수(int)를 담을 그릇 i
		 
		 * 변수 선언과 초기화를 동시에 하는 것도 가능~
		 * ( 자료형 변수명 = 값; )의 형태
		 * => 이 형태를 변수로 만든다! 라고 표현하기로~
		 */
		
		
		// 변수명 짓는 규칙
		// 1. 숫자로 시작하면 에러!
		// int i = 3;
		// int i = 3;	
		// int 10i = 3;
		// int i10 = 3;
		
		// 2. 특수문자, 띄어쓰기가 들어가면 에러!
		// string s = "ㅋㅋ":
		// string ★ = "ㅋㅋ":
		// string u u = "ㅋㅋ":
		 
				
		// 3. 자바문법(예약어) 사용하면 에러!
		// int int = 3; 
		int _int = 3;  // 아래 하이픈 써서 에러를 방지하는 방법!
		
		// Java 문화)
		// 4. 변수명을 봐도 뭔지 알 수 있게!
		int asdfasdfasdf = 2; // ????
		int age = 2; // 아! 이 변수는 나이를 표현 한거구나!
		
		// 5. 가독성을 위해서 (띄어쓰기가 필요할 경우에)
		// int price of computer = 1000000;
		
		// 뱀체
		int price_of_computer = 1000000; // 아래 하이픈을 사용
		// 낙타체
		int price0ofOcomputer = 1000000; // 중간에 0이나 O를 사용
		
		// 6. 한글은 사용 X !
		//////////////////////////////////////////
		// 변수를 만들었을 때, ' = ' 에 대해 한번 살펴보자 !
		// = : 대입연산자
		// A = B 
		// 현실) A는 B랑 같다.
		// 프로그래밍전반) A에 B라는 값을 넣어라!
		
		// 자료형
		// 		Bit : 데어터를 나타내는 최소 단위
		//			Binary Digit(이진수)
		//		모든 데이터는 0, 1의 조합으로 구성되는데,
		//		이때 0, 1의 값이 하나의 Bit가 됨
		//		(부호비트를 제외한 나머지 비트에 0 or 1값이 들어가고
		//		나타낼 수 있는 범위는 2의 부호비트를 제외한 나머지 비트수의 제곱
		 
		/*
		 * 기본형
		 * 정수
					byte : -128 ~ -127
					shout : 약 -3만 ~ 3만
					int : 약 -21억 ~ 21억 (v)
					long : int를 벗어나는 범위 (말그대로 방대한 데이터)
		 * 실수
					float 
					double (V)
					다른언어 : float / Java 한정 : double
				문자
					char : 
				논리
					boolean : 참 / 거짓 ( true / false )
				없음
					void : '없음' (나중에 알아보자!)
		 */	
		
		// 참조형
		/*
		 * 		기본형이 아닌 것들은 전부 다 참조형 !!
		 * 		문자열
		  			String : 문자열(여러글자)를 저장, 앞에 대문자 필수!
		 * 
		 */
		
		// char vs String
		char c = 'ㅋ'; // 한 글자를 담는 char / 작은따옴표 사용!
		String s = "ㅋㅋㅋㅋㅋㅋㅋㅋㅋ"; // 여러 글자를 담는 String / 큰따옴표 사용!
		
		// 현재 우리가 있는 층은 6층
		// 손가락이 10개
		// => 각각 변수를 선언한 후 => 변수 초기화까지!
		
		int floor;
		floor = 7;
		
		int finger;
		finger = 10;

		// 변수 선언과 초기화를 동시에 설정O
		
		int num = 10;
		// int num2 = "ten"; //자료형에 맞지 않는 값을 넣으면 에러
		
		int subway = 9;
		double subway2 = 9;
		System.out.println(subway2);
		// double에 int값을 넣는게 가능!
		// 넓게 보면 9는 9.0으로도 표현 가능하기 때문에
		//////////////////////////////////////////////
		
		
		
		// 자료형을 쓰면 변수 만드는거까지 포함
		int a = 10; // a라는 이름을 가진 정수형 변수를 만들기
					// + a에 10을 넣기
		// int a;
		// a = 10;
		// 자료형을 쓰지 않으면 값을 수정
		a = 20;
		
		// Python : 자바보다 상대적으로 고급언어(개발자가 X, 언어가 자동)
		// 자료형을 Python이 알아서 선정해준다
		// a = 10; => 변수가 존재하지 않으면 a를 만들어서 10을 넣고
		// a = 10; => 변수가 존재하고 있으면 a의 값을 바꾸는 형태
		
		// 변수끼리도 계산이 가능 O
		System.out.println(floor + finger);
		
		// 메모리의 영역 
		/*
		 * ???(요건 나중에)
		 * Stack
		 	프로그램이 종료되면 자동으로 정리
		 	밑에서부터 차곡차곡 쌓이는...<기본형>
		 	
		 * Heap
		  	프로그램이 종료되어도 여전히 남아있음 (수동 정리)
		  	컴퓨터가 적당하다고 판단한 어떠한 위치에 만들어버림
		  	
		 * Garbage Collection : Heap영역을 자동으로 정리해주는 시스템!

		 */
		
		int price = 7000;
		String menu = "짜장면";
		
		 
		
		
		
		
	}
}
